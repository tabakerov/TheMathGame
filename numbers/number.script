go.property("value", 0)
go.property("speed_m", 50)

function init(self)
	self.w, self.h = window.get_size()
	self.speed_m = self.speed_m / (1 + self.value)
	self.speed = vmath.vector3(math.random(-1 * self.speed_m, 1 * self.speed_m), math.random(-1 * self.speed_m, 1 * self.speed_m), 0)
	label.set_text("#label", self.value)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if self.value < 1 then
		print("im smol")
		go.delete(self.id)
	end
	if self.value > 9 then
		print("IM BIG")
		data = { position = go.get_position(), value = self.value }
		msg.post(msg.url(nil, "number_factory", "number_factory"), "spawn", data)
		go.delete()
	end
	local pos = go.get_position()
	pos = pos + self.speed * dt
	pos.x = pos.x % self.w
	pos.y = pos.y % self.h
	go.set_position(pos)
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if message.enter then
			
			
		else
			-- take action for exit
		end
	elseif message_id == hash("exchange") then
		self.value = self.value + message.value
		self.speed = message.speed
		label.set_text("#label", self.value)
	elseif message_id == hash("collision_response") then
		url = msg.url(nil, message.other_id, "number")
		over_value = go.get(url, "value")
		rnd = math.random(1, self.value)
		
		data = { value = rnd, speed = self.speed, orig_value =  self.value }
		msg.post(message.other_id, "exchange", data)
		self.value = self.value - rnd
		label.set_text("#label", self.value)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
